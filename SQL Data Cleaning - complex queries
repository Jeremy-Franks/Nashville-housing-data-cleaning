select * 
from PortfolioProject..NashvilleHousing

-----------------------------------------------------------------------------------

-- sale date converted to date format

select SaleDateConverted, convert(date,SaleDate)
from PortfolioProject..NashvilleHousing

--update NashvilleHousing
--set SaleDate = convert(date,SaleDate)

ALTER TABLE NashvilleHousing
add SaleDateConverted date;

update NashvilleHousing
set SaleDateConverted = convert(date,SaleDate)


-----------------------------------------------------------------------------------

-- null property address populated with parcelID

select *
from PortfolioProject..NashvilleHousing
where PropertyAddress is null


select a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, isnull(a.PropertyAddress,b.PropertyAddress)
from PortfolioProject..NashvilleHousing a
join PortfolioProject..NashvilleHousing b
	on a.ParcelID = b.ParcelID
	and a.[UniqueID ] <> b.[UniqueID ]
where a.PropertyAddress is null

update a 
set PropertyAddress = isnull(a.PropertyAddress,b.PropertyAddress)
from PortfolioProject..NashvilleHousing a
join PortfolioProject..NashvilleHousing b
	on a.ParcelID = b.ParcelID
	and a.[UniqueID ] <> b.[UniqueID ]
where a.PropertyAddress is null


-----------------------------------------------------------------------------------

-- property split into address and city

select PropertyAddress
from PortfolioProject..NashvilleHousing
-- where PropertyAddress is null
-- where PropertyAddress like '%fox%'


select 
substring(PropertyAddress, 1, charindex(',' ,PropertyAddress)-1) as Address,
substring(PropertyAddress, charindex(',' ,PropertyAddress)+1 , len(PropertyAddress)) as Address
from PortfolioProject..NashvilleHousing


ALTER TABLE NashvilleHousing
add PropertySplitAddress nvarchar(255);

update NashvilleHousing
set PropertySplitAddress = substring(PropertyAddress, 1, charindex(',' ,PropertyAddress)-1)

ALTER TABLE NashvilleHousing
add PropertySplitCity nvarchar(255);

update NashvilleHousing
set PropertySplitCity = substring(PropertyAddress, charindex(',' ,PropertyAddress)+1 , len(PropertyAddress))

select *
from NashvilleHousing
order by ParcelID


-----------------------------------------------------------------------------------

-- owner address split into address ,city and state


select OwnerAddress
from PortfolioProject..NashvilleHousing

select
parsename(replace(OwnerAddress, ',' ,'.') ,3),
parsename(replace(OwnerAddress, ',' ,'.') ,3),
parsename(replace(OwnerAddress, ',' ,'.') ,1)
from PortfolioProject..NashvilleHousing

ALTER TABLE NashvilleHousing
add OwnerSplitAddress nvarchar(255);

update NashvilleHousing
set OwnerSplitAddress = parsename(replace(OwnerAddress, ',' ,'.') ,3)

ALTER TABLE NashvilleHousing
add OwnerSplitCity nvarchar(255);

update NashvilleHousing
set OwnerSplitCity = parsename(replace(OwnerAddress, ',' ,'.') ,2)

ALTER TABLE NashvilleHousing
add OwnerSplitState nvarchar(255);

update NashvilleHousing
set OwnerSplitState = parsename(replace(OwnerAddress, ',' ,'.') ,1)


select *
from PortfolioProject..NashvilleHousing



-----------------------------------------------------------------------------------

-- changed 'Y'and 'N' to 'yes' and 'no' fron SoldAsVacant

select distinct( SoldAsVacant), count(SoldAsVacant)
from PortfolioProject..NashvilleHousing
group by SoldAsVacant
order by 2

select SoldAsVacant, 
case when SoldAsVacant = 'Y' then 'Yes'
	 when SoldAsVacant = 'N' then 'No'
	 else SoldAsVacant
	 end
from PortfolioProject..NashvilleHousing

update NashvilleHousing
set SoldAsVacant = case when SoldAsVacant = 'Y' then 'Yes'
	 when SoldAsVacant = 'N' then 'No'
	 else SoldAsVacant
	 end



-----------------------------------------------------------------------------------

-- remove duplicates
with RowNumCTE as (
select *,
	ROW_NUMBER() over (
	partition by ParcelID,	
				 SalePrice,
				 SaleDateConverted,
				 LegalReference
				 order by UniqueID ) row_num

from PortfolioProject..NashvilleHousing
)

delete
from RowNumCTE
where row_num > 1

-----------------------------------------------------------------------------------

-- dropped repeated columns

select * 
from NashvilleHousing

alter table NashvilleHousing
drop column OwnerAddress, TaxDistrict, PropertyAddress


alter table NashvilleHousing
drop column SaleDate
